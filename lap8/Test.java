package lap8;

public class Test {
	public static void main(String[] args) {
//		Node a = new Node("A");
//		Node b = new Node("B");
//		Node c = new Node("C");
//		Node d = new Node("D");
//		Node e = new Node("E", 3);
//		Node f = new Node("F", 12);
//		Node g = new Node("G", 8);
//		Node h = new Node("H", 2);
//		Node i = new Node("I", 4);
//		Node j = new Node("J", 6);
//		Node k = new Node("K", 14);
//		Node l = new Node("L", 5);
//		Node m = new Node("M", 2);
//		a.addChild(b);
//		a.addChild(c);
//		a.addChild(d);
//		b.addChild(e);
//		b.addChild(f);
//		b.addChild(g);
//		c.addChild(h);
//		c.addChild(i);
//		c.addChild(j);
//		d.addChild(k);
//		d.addChild(l);
//		d.addChild(m);
//		Node a = new Node("A");
//		Node b = new Node("B");
//		Node c = new Node("C");
//		Node d = new Node("D",0);
//		Node e = new Node("E");
//		Node f = new Node("F");
//		Node g = new Node("G", -5);
//		Node h = new Node("H", 3);
//		Node i = new Node("I", 8);
//		Node j = new Node("J");
//		Node k = new Node("K");
//		Node l = new Node("L", 2);
//		Node m = new Node("M");
//		Node n = new Node("N",4);
//		Node o = new Node("O");
//		Node p = new Node("P",9);
//		Node q = new Node("Q",-6);
//		Node r = new Node("R",0);
//		Node s = new Node("S",3);
//		Node t = new Node("T",5);
//		Node u = new Node("U",-7);
//		Node v = new Node("V",-9);
//		Node w = new Node("W",-3);
//		Node x = new Node("X",-5);
//		a.addChild(b);
//		a.addChild(c);
//		a.addChild(d);
//		a.addChild(e);
//		b.addChild(f);
//		b.addChild(g);
//		c.addChild(h);
//		c.addChild(i);
//		c.addChild(j);
//		e.addChild(k);
//		e.addChild(l);
//		e.addChild(m);
//		f.addChild(n);
//		f.addChild(o);
//		j.addChild(p);
//		j.addChild(q);
//		j.addChild(r);
//		k.addChild(s);
//		k.addChild(t);
//		m.addChild(u);
//		m.addChild(v);
//		o.addChild(w);
//		o.addChild(x);
		Node a = new Node("A");
		Node b = new Node("B");
		Node c = new Node("C");
		Node d = new Node("D");
		Node e = new Node("E");
		Node f = new Node("F");
		Node g = new Node("G");
		Node h = new Node("H");
		Node i = new Node("I");
		Node j = new Node("J");
		Node k = new Node("K");
		Node l = new Node("L");
		Node m = new Node("M");
		Node n = new Node("N");
		Node o = new Node("O");
		Node p = new Node("P");
		Node q = new Node("Q");
		Node r = new Node("R");
		Node s = new Node("S");
		Node t = new Node("T");
		Node n_4 = new Node("4",4);
		Node n_9 = new Node("9",9);
		Node n_2 = new Node("2",2);
		Node n_1 = new Node("1",1);
		Node n_10 = new Node("10",10);
		Node n_0 = new Node("0",0);
		Node n_7 = new Node("7",7);
		Node n_8 = new Node("8",8);
		Node n_3 = new Node("3",3);
		a.addChild(b);
		a.addChild(c);
		a.addChild(d);
		b.addChild(e);
		b.addChild(f);
		c.addChild(g);
		c.addChild(h);
		d.addChild(i);
		d.addChild(j);
		e.addChild(k);
		e.addChild(l);
		f.addChild(m);
		f.addChild(n);
		g.addChild(o);
		h.addChild(p);
		h.addChild(q);
		i.addChild(r);
		i.addChild(s);
		j.addChild(t);
		k.addChild(n_4);
		k.addChild(n_9);
		l.addChild(n_2);
		m.addChild(n_1);
		m.addChild(n_10);
		n.addChild(n_0);
		n.addChild(n_7);
		o.addChild(n_4);
		p.addChild(n_2);
		q.addChild(n_1);
		q.addChild(n_8);
		r.addChild(n_3);
		s.addChild(n_7);
		s.addChild(n_4);
		t.addChild(n_3);
		t.addChild(n_1);
		
		
		
		
		ISearchAlgo minimax = new MiniMaxSearchAlgo();
		ISearchAlgo alphabeta = new AlphaBetaSearchAlgo();
		ISearchAlgo alphaRTL=new AlphaBetaRightToLeftSearchAlgo();
		MiniMaxSearchAlgo mini = new MiniMaxSearchAlgo();
		//System.out.println(mini.minValue(b));
		//minimax.execute(a);
		alphabeta.execute(a);

	}

}
